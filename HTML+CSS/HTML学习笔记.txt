a标签href不跳转
当页面中a标签不需要任何跳转时，从原理上来讲，可分为如下两种方式
    1.标签属性href，使其指向空或不返回任何内容。如：
    <a href="javascript:void(0);">
    <a href="javascript:;" >点此无反应javascript:</a>
    2.标签事件onclick，阻止其默认行为。如：
    <a href="" onclick="return false;">return false;</a>
    <a href="#" onclick="return false;">return false;</a>

什么是网站？
    网站就是一个绑定了域名的文件夹，该文件夹中可以包含子文件夹以及各种各样的文件，这些文件都可以通过域名来访问

什么是域名解析？域名解析如何实现？
    互联网上的所有服务器都是通过 IP 地址来定位的，域名只是 IP 地址的一种助记符，帮助用户记住网站的链接以及品牌。使用域名访问网站时，浏览器会先找到域名对应的 IP 地址，然后再通过 IP 地址请求服务器上的文件；通过 DNS 服务器来完成的。

使用<a>的href属性指定跳转网站时，需要在网址上添加协议，否则跳转到本地

HTML 属性有很多，大体可以分为两类：
    有些属性适用于大部分或者所有 HTML 标签，我们将这些属性称为通用属性；
    有些属性只适用于一个或者几个特定的 HTML 标签，我们将这些属性称为专用属性。

标签分类
    物理标签：这类标签用来为设置文本的外观；
    逻辑标签：这类标签用来赋予文本一些逻辑或语义值。
    如：<strong>与<b>;<em><i>

超链接变色原因及机制
    超链接被点击之前为蓝色，超链接被点击之后变成紫色。超链接默认带有下划线，下划线颜色和文本颜色保持一致。 
    浏览器根据历史记录来判断超链接是否被点击过，如果 href 属性和历史记录中的某条 URL 重合，那么说明该链接被点击了。清空浏览器的历史记录会让超链接的颜色再次变回蓝色。

关于 width 和 height 属性的两点建议：
    一般建议为图片设置 width 和 height 属性，以便浏览器可以在加载图片之前为其分配足够的空间，否则图片加载过程中可能会导致您的网站布局失真或闪烁。
    如果您的页面使用响应式布局（自适应布局），建议在上传图片之前裁剪好尺寸，而不要设置 width 和 height 属性，这样图片能够跟随屏幕宽度自动改变尺寸，从而不会变形，或者超出屏幕宽度。

H5新增标签picture
    在 <picture> 标签中包含零个或多个 <source> 标签，通过 <source> 标签中的 media 属性可以设定匹配条件（允许哪个版本的图片显示），通过 srcset 属性可以定义图片的路径。另外，在 <picture> 标签的最后还需要定义一个 <img> 标签
    浏览器将评估每个 <source> 标签，并在其中选择最合适的 <source> 标签，如果未找到匹配项，则使用 <img> 标签所定义的图片。另外，<img> 必须是 <picture> 标签的最后一个子元素。如果没有，页面为空。

图像映射
    图像映射允许您在一个图片中定义超链接，实现思想就是在图像中划分一些区域，并在这些区域中定义超链接。例如，我们可以按照地图的划分为每个国家或城市所在的区域定义超链接。
    <map> 标签的 name 属性对应的是 <img> 标签的 usemap 属性，<area>标签用于定义图片的可点击区域，您可以在图像中定义任意数量的可点击区域。
    注意：图片映射不能应用于网站导航，因为它对搜索引擎并不友好。图像映射经常与地图一起使用，有许多工具都可以创建图像映射，例如 Adobe Dreamweaver 就可轻松创建图像地图。
    注释：area 元素永远嵌套在 map 元素内部。area 元素可定义图像映射中的区域。
    注释：<img>中的 usemap 属性可引用 <map> 中的 id 或 name 属性（取决于浏览器），所以我们应同时向 <map> 添加 id 和 name 属性。
    shape 和 coords 属性
        在 <area> 标签中可以通过 shape 属性来定义可点击区域的形状，并通过 coords 属性来定义形状所对应的坐标。其中 shape 属性的可选值有三个，分别是 rect（矩形）、circle（圆形）和 poly（多边形），coords 属性中坐标的值则取决于可点击区域的形状。
        <area shape="rect" coords="x1, y1, x2, y2" href="http://c.biancheng.net/" alt="">
        其中 x1、y1 代表矩形的左上角坐标，x2、y2 代表矩形的右下角坐标。
        假如定义一个圆形的可点击区域，示例代码如下：
        <area shape="circle" coords="x, y, radius" href="" alt="">
        其中 x、y 代表圆心的坐标，而 radius 则是圆的半径。
        假如定义一个多边形的可点击区域，示例代码如下：
        <area shape="poly" coords="x1, y1, x2, y2, x3, y3, ..., xn, yn" href="http://c.biancheng.net/" alt="">
        其中每对 x 和 y 的值都代表一个多边形的顶点坐标
        注意：所有坐标都是相对于图片的左上角来计算的。

<table>标签
    <table>标签默认无边框，当设置边框时，默认为双层边框
    可以通过border-collapse改变边框separate双层collapse单层
    HTML 允许使用 <caption> 标签来为表格设置标题，标题用来描述表格的内容。
    rowspan：表示跨行合并。在 HTML 代码中，允许我们使用 rowspan 特性来表明单元格所要跨越的行数。
    colspan：表示跨列合并。同样的，在 HTML 中，允许我们使用 colspan 特性来表明单元格所要跨越的列数。

<form>标签
    对属性的说明：
    action 属性用来指明将表单提交到哪个页面；
    method 属性表示使用哪个方式提交数据，包括 GET 和 POST 两种方式，它们两者的区别如下：
        GET：用户点击提交按钮后，提交的信息会被显示在页面的地址栏中。一般情况下，GET 提交方式中不建议包含密码，因为密码被提交到地址栏，不安全。
        POST：如果表单包含密码这种敏感信息，建议使用 POST 方式进行提交，这样数据会传送到后台，不显示在地址栏中，相对安全。
    需要提交的内容一定要提供name属性，否则传输内容为空

HTML引入CSS的方式（四种）
    1.内嵌样式表
    2.内联样式
    3.外部样式表
    4.导入样式表
    @import url("lianjie-2.css"); p{text-indent: 3em;}有效，p{text-indent:3em;} @import url("lianjie-2.css");无效，否则将导入效果无效。在 CSS 文件中也需要将 @import 放在前面，后面加入 CSS 样式，否则也是无效。
    比较链接方式和导入方式
        链接方式（下面用 link 代替）和导入方式（下面用 @import 代替）都是引入外部的 CSS 文件的方式，下面我们来比较这两种方式，并且说明为什么不推荐使用 @import。
        link 属于 HTML，通过 <link> 标签中的 href 属性来引入外部文件，而 @import 属于 CSS，所以导入语句应写在 CSS 中，要注意的是导入语句应写在样式表的开头，否则无法正确导入外部文件；
        @import 是 CSS2.1 才出现的概念，所以如果浏览器版本较低，无法正确导入外部样式文件；
        当 HTML 文件被加载时，link 引用的文件会同时被加载，而 @import 引用的文件则会等页面全部下载完毕再被加载；
    各种方式的优先级
        行内样式>链接式>内嵌式>@import导入式
    在使用@import引用 CSS 时有以下几点需要注意：
        在 HTML 文档中使用@import时，@import需要定义在<style>标签中。如果<style>标签中还有其它的 CSS 样式，那么@import就必须定义在所有样式的最前面；
        @import同样可以在 .css 格式的文件中使用，但同样需要定义在所有样式的前面；
        @import是在 CSS2.1 中新增的功能，所以一些低版本的浏览器可能会不支持；
        在页面加载时，使用<link>标签引用的样式文件会随页面同时加载，而使用@import引用的样式文件会等待页面加载完成后再加载。如果@import引用的样式文件过大、加载时间过长的话，在页面加载完成后就会出现没有样式的情况，影响用户体验。

<iframe>标签
    用来定义一个内联框架，使用它可以将另一个网页嵌入到当前网页中。<iframe> 标签会在网页中定义一个矩形区域，浏览器可以在这个区域内显示另一个页面的内容。
    <iframe> 标签的语法格式如下：
        <iframe src="url" width="m" height="n"></iframe>
    src 属性用来指定要嵌入的网页的地址；width 和 height 属性用来指定框架的宽度和高度，默认单位是像素，当然您也可以使用百分比。
    HTML <iframe> 标签不利于搜索引擎抓取页面内容，对 SEO 具有负面效果，在现代 Web 设计中不建议使用。
    SEO（Search Engine Optimization）：汉译为搜索引擎优化。是一种方式：利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名。目的是让其在行业内占据领先地位，获得品牌收益。很大程度上是网站经营者的一种商业行为，将自己或自己公司的排名前移。
    https://baike.baidu.com/item/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%BC%98%E5%8C%96/3132?fr=aladdin
    发现target的其他用法
    通过name指定
    <p><a href="http://c.biancheng.net/" target="myframe">猛击这里查看C语言中文网在手机端的显示效果</a></p>
    <iframe id="myframe" name="myframe" width="330" height="580"></iframe>
    <style>
        #myframe {
            border: 1px solid #ddd;
            background-color: #f6f6f6;
        }
    </style>

<noscript>
    当用户的浏览器不支持 JavaScript 脚本或者禁用 JavaScript 脚本时，可以在 <noscript> 标签中定义一些内容来替代不能运行的 JavaScript 脚本或者给用户一些提示。除了 <script> 标签外，在 <noscript> 标签中可以包含任何 HTML 元素，

类选择器
    由于 class 属性不是唯一的，可以应用于不同的标签，因此您还可以在定义类选择器时指定具体的标签，如下所示：
    p.black {
    color: black;
    }
    p.black选择器仅会将其中的样式应用到所有具有class="black"属性的<p>标签中，对于其它的具有class="black"属性的标签则没有影响。
    注：p .black无效

text-shadow
    注意：text-shadow 属性可以设置一个或多个阴影效果，只需要将每组的值使用逗号,分隔即可（类似于 background 属性的用法）。

外边距折叠
    外边距折叠指的是相邻的两个或多个外边距会在垂直方向上发生合并，合并为一个外边距。关于外边距折叠有以下几点需要注意：
        margin 折叠只发生在块级元素上；
        浮动元素的外边距不会与任何外边距发生折叠；
        设置了 overflow 属性且值不为 visible 的块级元素，将不会与它的子元素发生外边距折叠；
        绝对定位元素的外边距不与任何外边距发生折叠；
        根元素（例如<body>）的外边距不与其它任何外边距发生折叠。
    1) 在相邻的两个兄弟元素之间：
        如果相邻两个元素外边距的值都为正数，那么两个元素的实际间距为两个外边距中较大的那个；
        如果相邻两个元素外边距的值都为负数，那么两个元素的实际间距为两个外边距中较小的那个；
        如果相邻两个元素外边距的值一个为正数、一个为负数，那么两个元素之间的实际间距为两个外边距相加的和。
    2) 在父元素与其子元素之间：（注意：父元素不能定义边框和内边距，且父元素与子元素之间不能有其它元素）
        如果父元素与子元素外边距的值都为正数，那么折叠后的外边距为两个外边距中较大的那个；
        如果父元素与子元素外边距的值都为负数，那么折叠后的外边距为两个外边距中较小的那个；
        如果父元素与子元素外边距的值一个为正数、一个负数，那么折叠后的外边距为两个外边距相加的和。

自定义光标样式
    除了可以使用上表中介绍的光标样式外，您也可以使用图像文件来自定义光标的样式，如下所示：
    cursor: url("custom.gif"), url("custom.cur"), default;
    您可以使用 url() 定义多个光标的样式文件，每个 url() 之间使用逗号,分隔，上面示例中 custom.gif、custom.cur 就是自定义的光标文件。需要注意的是，在自定义光标样式时，要在最后定义一个上表中的通用光标样式，防止使用 url() 中定义的光标图像资源失效。

轮廓与边框的区别
    轮廓和边框看起来非常相似，但它们之间也并非没有区别，例如：
    元素上下左右四个方向上边框的样式、宽度、颜色可以单独设置，而轮廓在元素四个方向的宽度、样式、颜色都是相同的，不能单独设置；
    边框的宽度会直接影响元素的尺寸，而轮廓不会占用页面空间，不会影响页面的布局，但是轮廓会与页面上的其它元素发声重叠；
    除了会与周围的元素发声重叠外，轮廓对周围的元素没有任何影响；
    边框是元素尺寸的一部分，而轮廓不是，也就是说无论轮廓的宽度是多少，元素的尺寸都不会改变；
    轮廓可以不是矩形的，但您不能直接创建圆形轮廓。

display和visibility的区别
    提示：visibility 属性虽然会隐藏元素，但会保留元素在页面中所占的空间。如果您希望元素隐藏的同时又不占用页面空间的话，请使用 display 属性。

opacity
    另外，在使用 opacity 属性时，还需要注意以下几点：
    当一个元素定义了 opacity 属性，并且其值小于 1 时，那么它的子元素也会拥有同样的透明度；
    当一个元素定义了 opacity 属性，并且其值小于 1 时，将会重新定义该元素默认的 z-index 属性，如果其它的元素为非定位元素，那么该元素的堆叠级别将会高于其它元素；
    如果定义的 opacity 属性值超过了指定的范围，那么则截取与之最相近的值，例如 1.5 将截取为 1。
    IE8 或者更早版本的 IE 浏览器不支持 opacity 属性，若想要在这些浏览器中实现透明效果可以使用 filter 属性，语法格式如下：
    filter: alpha(opacity = number);
    其中 number 的取值范围为 0~100，值越小则越透明。

